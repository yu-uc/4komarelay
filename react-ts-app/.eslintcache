[{"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\index.tsx":"1","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reportWebVitals.ts":"2","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\App.tsx":"3","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Login.tsx":"4","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Home.tsx":"5","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Navbar.tsx":"6","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Registration.tsx":"7","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Scroll.tsx":"8"},{"size":517,"mtime":1606817256752,"results":"9","hashOfConfig":"10"},{"size":440,"mtime":1606817256760,"results":"11","hashOfConfig":"10"},{"size":550,"mtime":1610108695889,"results":"12","hashOfConfig":"10"},{"size":3563,"mtime":1609835292373,"results":"13","hashOfConfig":"10"},{"size":362,"mtime":1610108766450,"results":"14","hashOfConfig":"10"},{"size":4577,"mtime":1609773877535,"results":"15","hashOfConfig":"10"},{"size":3691,"mtime":1610092338438,"results":"16","hashOfConfig":"10"},{"size":1200,"mtime":1610108539243,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1bauzl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\index.tsx",[],["37","38"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reportWebVitals.ts",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\App.tsx",["39"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Login.tsx",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Home.tsx",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Navbar.tsx",["40","41","42","43","44"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Container,\r\n  AppBar,\r\n  Toolbar,\r\n  InputBase,\r\n  IconButton,\r\n  fade,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    toolBar: {\r\n      backgroundColor: \"#FFB549\",\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 3,\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"block\",\r\n      },\r\n    },\r\n    koumoku: {\r\n      color: \"#FFF\",\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"block\",\r\n      },\r\n    },\r\n    //ここから検索フォームのcss\r\n    search: {\r\n      position: \"relative\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      \"&:hover\": {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: \"auto\",\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: \"100%\",\r\n      position: \"absolute\",\r\n      pointerEvents: \"none\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    inputRoot: {\r\n      color: \"inherit\",\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"12ch\",\r\n        \"&:focus\": {\r\n          width: \"20ch\",\r\n        },\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  //ドロップダウンメニュー\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  }; //ドロップダウンを選択したとき\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.toolBar} position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            ４コマリレー\r\n          </Typography>\r\n          <Typography variant=\"h6\" className={classes.koumoku}>\r\n            <Link to=\"/login\">Login</Link>\r\n          </Typography>\r\n          <div>\r\n            <Typography\r\n              variant=\"h6\"\r\n              className={classes.koumoku}\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleClick}\r\n            >\r\n              完成作品\r\n            </Typography>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>\r\n                {\" \"}\r\n                <Link to=\"/login\">全て</Link>\r\n              </MenuItem>\r\n              <MenuItem onClick={handleClose}>アクション</MenuItem>\r\n              <MenuItem onClick={handleClose}>ギャグ</MenuItem>\r\n            </Menu>\r\n          </div>\r\n\r\n          <Typography variant=\"h6\" className={classes.koumoku}>\r\n            未完成作品\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"検索\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Registration.tsx",["45"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Grid, Button, TextField, Container } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      backgroundColor: \"#FFB549\",\r\n      color: \"#FFFFFF\",\r\n      borderLeftColor: \"#FFB549\",\r\n      marginBottom: \"8px\",\r\n      margin: theme.spacing(2),\r\n      width: \"40ch\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#FFF\",\r\n        color: \"#FFB549\",\r\n      },\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"40ch\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst Registration = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  const getAuthentication = async () => {\r\n    console.log(userEmail);\r\n    console.log(userPassword);\r\n\r\n    const data = { uid: userEmail, pwd: userPassword };\r\n\r\n    const param = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n      },\r\n\r\n      // リクエストボディ\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    const url = \"http://localhost:3000/api/method/\";\r\n    // 入力したidとパスワードをapiに送信\r\n    const res = await fetch(url, param)\r\n      .then((res) => {\r\n        console.log(\"通信に成功しました\");\r\n        return res.json();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"通信に失敗しました\", error);\r\n        return null;\r\n      });\r\n\r\n    if (res) {\r\n      //console.log(\"true\");\r\n      setIsLogin(true);\r\n      handleToHomePage();\r\n    } else {\r\n      console.log(\"false\");\r\n    }\r\n\r\n    return true;\r\n  };\r\n  //trueの時ページ遷移\r\n  const handleToHomePage = () => {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"xs\">\r\n        <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\r\n          <h1>会員登録</h1>\r\n        </Grid>\r\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div>\r\n              <TextField\r\n                id=\"outlined-required\"\r\n                label=\"id(メールアドレス)\"\r\n                defaultValue=\"\"\r\n                variant=\"outlined\"\r\n                onChange={(id) => setUserEmail(id.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"パスワード\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                onChange={(pass) => setUserPassword(pass.target.value)}\r\n              />\r\n            </div>\r\n          </form>\r\n        </Grid>\r\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n          <div>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              onClick={() => getAuthentication()}\r\n            >\r\n              　登録する\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        <Grid container spacing={4} alignItems=\"center\" justify=\"center\">\r\n          <p>\r\n            <Link to=\"/Login\">アカウントをお持ちの方はこちら</Link>\r\n          </p>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Registration;\r\n","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Scroll.tsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":6,"column":8,"nodeType":"52","messageId":"53","endLine":6,"endColumn":14},{"ruleId":"50","severity":1,"message":"54","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"55","line":5,"column":3,"nodeType":"52","messageId":"53","endLine":5,"endColumn":7},{"ruleId":"50","severity":1,"message":"56","line":6,"column":3,"nodeType":"52","messageId":"53","endLine":6,"endColumn":9},{"ruleId":"50","severity":1,"message":"57","line":7,"column":3,"nodeType":"52","messageId":"53","endLine":7,"endColumn":12},{"ruleId":"50","severity":1,"message":"58","line":8,"column":3,"nodeType":"52","messageId":"53","endLine":8,"endColumn":12},{"ruleId":"50","severity":1,"message":"59","line":34,"column":10,"nodeType":"52","messageId":"53","endLine":34,"endColumn":17},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'Scroll' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Container' is defined but never used.","'isLogin' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]