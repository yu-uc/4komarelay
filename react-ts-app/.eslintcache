[{"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\index.tsx":"1","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reportWebVitals.ts":"2","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\App.tsx":"3","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Login.tsx":"4","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Home.tsx":"5","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Navbar.tsx":"6","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Registration.tsx":"7","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Scroll.tsx":"8"},{"size":517,"mtime":1606817256752,"results":"9","hashOfConfig":"10"},{"size":440,"mtime":1606817256760,"results":"11","hashOfConfig":"10"},{"size":509,"mtime":1610165009289,"results":"12","hashOfConfig":"10"},{"size":3563,"mtime":1610424483308,"results":"13","hashOfConfig":"10"},{"size":362,"mtime":1610108766450,"results":"14","hashOfConfig":"10"},{"size":6007,"mtime":1610429035013,"results":"15","hashOfConfig":"10"},{"size":3690,"mtime":1610263702905,"results":"16","hashOfConfig":"10"},{"size":3171,"mtime":1610370537700,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1bauzl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\index.tsx",[],["36","37"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reportWebVitals.ts",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\App.tsx",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Login.tsx",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Home.tsx",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Navbar.tsx",["38","39","40","41","42"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Registration.tsx",["43"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Grid, Button, TextField, Container } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      backgroundColor: \"#FFB549\",\r\n      color: \"#FFFFFF\",\r\n      borderLeftColor: \"#FFB549\",\r\n      marginBottom: \"8px\",\r\n      margin: theme.spacing(2),\r\n      width: \"40ch\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#FFF\",\r\n        color: \"#FFB549\",\r\n      },\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"40ch\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst Registration = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n const [isLogin, setIsLogin] = useState(false);\r\n\r\n  const getAuthentication = async () => {\r\n    console.log(userEmail);\r\n    console.log(userPassword);\r\n\r\n    const data = { uid: userEmail, pwd: userPassword };\r\n\r\n    const param = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n      },\r\n\r\n      // リクエストボディ\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    const url = \"http://localhost:3000/api/method/\";\r\n    // 入力したidとパスワードをapiに送信\r\n    const res = await fetch(url, param)\r\n      .then((res) => {\r\n        console.log(\"通信に成功しました\");\r\n        return res.json();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"通信に失敗しました\", error);\r\n        return null;\r\n      });\r\n\r\n    if (res) {\r\n      //console.log(\"true\");\r\n      setIsLogin(true);\r\n      handleToHomePage();\r\n    } else {\r\n      console.log(\"false\");\r\n    }\r\n\r\n    return true;\r\n  };\r\n  //trueの時ページ遷移\r\n  const handleToHomePage = () => {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"xs\">\r\n        <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\r\n          <h1>会員登録</h1>\r\n        </Grid>\r\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div>\r\n              <TextField\r\n                id=\"outlined-required\"\r\n                label=\"id(メールアドレス)\"\r\n                defaultValue=\"\"\r\n                variant=\"outlined\"\r\n                onChange={(id) => setUserEmail(id.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"パスワード\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                onChange={(pass) => setUserPassword(pass.target.value)}\r\n              />\r\n            </div>\r\n          </form>\r\n        </Grid>\r\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n          <div>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              onClick={() => getAuthentication()}\r\n            >\r\n              　登録する\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        <Grid container spacing={4} alignItems=\"center\" justify=\"center\">\r\n          <p>\r\n            <Link to=\"/Login\">アカウントをお持ちの方はこちら</Link>\r\n          </p>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Registration;\r\n","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Scroll.tsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":14},{"ruleId":"48","severity":1,"message":"52","line":11,"column":3,"nodeType":"50","messageId":"51","endLine":11,"endColumn":12},{"ruleId":"48","severity":1,"message":"53","line":12,"column":3,"nodeType":"50","messageId":"51","endLine":12,"endColumn":13},{"ruleId":"48","severity":1,"message":"54","line":19,"column":8,"nodeType":"50","messageId":"51","endLine":19,"endColumn":16},{"ruleId":"48","severity":1,"message":"55","line":112,"column":9,"nodeType":"50","messageId":"51","endLine":112,"endColumn":24},{"ruleId":"48","severity":1,"message":"56","line":34,"column":9,"nodeType":"50","messageId":"51","endLine":34,"endColumn":16},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'InputBase' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'callMikanseiApi' is assigned a value but never used.","'isLogin' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]