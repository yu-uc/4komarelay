[{"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\index.tsx":"1","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reportWebVitals.ts":"2","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\App.tsx":"3","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Login.tsx":"4","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Home.tsx":"5","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Navbar.tsx":"6","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Registration.tsx":"7","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Scroll.tsx":"8","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\store\\store.js":"9","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\users\\reducers.js":"10","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\users\\actons.js":"11","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\store\\initialState.js":"12","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Return.tsx":"13","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Delete.tsx":"14","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Post.js":"15","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\PostContinus.js":"16","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\PostButton.tsx":"17"},{"size":864,"mtime":1610770444881,"results":"18","hashOfConfig":"19"},{"size":440,"mtime":1606817256760,"results":"20","hashOfConfig":"19"},{"size":1762,"mtime":1610879261357,"results":"21","hashOfConfig":"19"},{"size":4018,"mtime":1610946412176,"results":"22","hashOfConfig":"19"},{"size":1180,"mtime":1610858140969,"results":"23","hashOfConfig":"19"},{"size":8196,"mtime":1610951868660,"results":"24","hashOfConfig":"19"},{"size":3826,"mtime":1610946285491,"results":"25","hashOfConfig":"19"},{"size":4665,"mtime":1610958399638,"results":"26","hashOfConfig":"19"},{"size":547,"mtime":1610881244975,"results":"27","hashOfConfig":"19"},{"size":806,"mtime":1610881301682,"results":"28","hashOfConfig":"19"},{"size":630,"mtime":1610949478458,"results":"29","hashOfConfig":"19"},{"size":215,"mtime":1610950057930,"results":"30","hashOfConfig":"19"},{"size":377,"mtime":1610858181788,"results":"31","hashOfConfig":"19"},{"size":2073,"mtime":1610945392682,"results":"32","hashOfConfig":"19"},{"size":6378,"mtime":1610948873094,"results":"33","hashOfConfig":"19"},{"size":4048,"mtime":1610951102337,"results":"34","hashOfConfig":"19"},{"size":1602,"mtime":1610950211632,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1bauzl",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\index.tsx",[],["77","78"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reportWebVitals.ts",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\App.tsx",["79"],"import React, { useReducer } from \"react\";\r\nimport \"./App.css\";\r\nimport Login from \"./componet/Login\";\r\nimport Home from \"./componet/Home\";\r\nimport Registration from \"./componet/Registration\";\r\nimport Return from \"./componet/Return\";\r\nimport Post from \"./componet/Post\";\r\nimport PostContinus from \"./componet/PostContinus\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n//ログインしていなかったらloginのパスに飛ばす処理\r\n\r\n// type State = {\r\n//   uid: string;\r\n// };\r\n\r\n// type Action = { type: string; payload: State };\r\n\r\n// enum ActionType {\r\n//   SINGIN = \"SINGIN\",\r\n// }\r\n\r\n// function reducer(state: State, action: { type: any; payload: any }) {\r\n//   switch (action.type) {\r\n//     case \"SINGIN\":\r\n//       return {\r\n//         ...state,\r\n//         uid: action.payload,\r\n//         // isLogin: true,\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n\r\n// export const UsersContext = React.createContext(\r\n//   {} as {\r\n//     state: State;\r\n//     dispatch: React.Dispatch<Action>;\r\n//   }\r\n// );\r\n\r\n// const initialState = {\r\n//   uid: \"unknown\",\r\n// };\r\n\r\n// const UsersProvider = ({ children }: any) => {\r\n//   const [state, dispatch] = useReducer(reducer, initialState);\r\n//   return (\r\n//     <UsersContext.Provider value={{ state, dispatch }}>\r\n//       {children}\r\n//     </UsersContext.Provider>\r\n//   );\r\n// };\r\n\r\nconst App = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/login\" component={Login} />\r\n    <Route path=\"/Registration\" component={Registration} />\r\n    <Route path=\"/Return\" component={Return} />\r\n    <Route path=\"/Post\" component={Post} />\r\n    <Route path=\"/PostContinus\" component={PostContinus} />\r\n  </Switch>\r\n);\r\nexport default App;\r\n","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Login.tsx",["80","81"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Grid, Button, TextField, Container } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signInAction } from \"../reducks/users/actons\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      backgroundColor: \"#FFB549\",\r\n      color: \"#FFFFFF\",\r\n      borderLeftColor: \"#FFB549\",\r\n      marginBottom: \"8px\",\r\n      margin: theme.spacing(2),\r\n      width: \"40ch\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#FFF\",\r\n        color: \"#FFB549\",\r\n      },\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"40ch\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst Login = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const selector = useSelector((state: any) => state);\r\n\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n\r\n  const getAuthentication = async () => {\r\n    if (userEmail == \"\" || userPassword == \"\") {\r\n      alert(\"入力情報が足りません\");\r\n    } else {\r\n      const url =\r\n        \"http://localhost:3000/api/method/login?uid=\" +\r\n        userEmail +\r\n        \"&pwd=\" +\r\n        userPassword;\r\n      // 入力したidとパスワードをapiに送信\r\n      const res = await fetch(url)\r\n        .then((res) => {\r\n          console.log(\"通信に成功しました\");\r\n          return res.json();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"通信に失敗しました\", error);\r\n          return null;\r\n        });\r\n\r\n      if (res) {\r\n        //usercontexをログイン状態に変更してuidを設定\r\n        dispatch(signInAction({ uid: userEmail, isLogin: true }));\r\n        //メインページに移動\r\n        handleToHomePage();\r\n      } else {\r\n        alert(\"ログインに失敗しました\");\r\n        console.log(\"false\");\r\n      }\r\n    }\r\n\r\n    // return true;\r\n  };\r\n  //trueの時ページ遷移\r\n  const handleToHomePage = () => {\r\n    //\r\n    dispatch(push(\"/\"));\r\n    // props.history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"xs\">\r\n        <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\r\n          <h1>ログイン{selector.users.uid}</h1>\r\n        </Grid>\r\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div>\r\n              <TextField\r\n                id=\"outlined-required\"\r\n                label=\"id(メールアドレス)\"\r\n                defaultValue=\"\"\r\n                variant=\"outlined\"\r\n                onChange={(id) => setUserEmail(id.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"パスワード\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                onChange={(pass) => setUserPassword(pass.target.value)}\r\n              />\r\n            </div>\r\n          </form>\r\n        </Grid>\r\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n          <div>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              onClick={() => getAuthentication()}\r\n            >\r\n              ログイン\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        <Grid container spacing={4} alignItems=\"center\" justify=\"center\">\r\n          <p>\r\n            <Link to=\"/Registration\">アカウントをお持ちでない方はこちら</Link>\r\n          </p>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Home.tsx",["82","83"],"import { push } from \"connected-react-router\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { UsersContext } from \"../App\";\r\nimport { signInAction } from \"../reducks/users/actons\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport Scroll from \"./Scroll\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const selector = useSelector((state: any) => state);\r\n  const num = selector.serches.count;\r\n  // const [list, setList] = useState<any[]>([]);\r\n\r\n  console.log(selector);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {\" \"}\r\n        {(() => {\r\n          if (!selector.users.isLogin) {\r\n            return <Redirect to=\"/login\" />;\r\n          } else {\r\n            return;\r\n          }\r\n        })()}\r\n      </div>\r\n      {/* {if(selectpr.users.isLogin)<Redirect to=\"/login\" />} */}\r\n      <div>\r\n        <Navbar />\r\n      \r\n        <h3>userID:{selector.users.uid}</h3>\r\n        <h3>{selector.serches.genre}の検索結果</h3>\r\n        <button onClick={() => dispatch(push(\"/login\"))}></button>\r\n        <Scroll />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Navbar.tsx",["84","85"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Registration.tsx",["86","87","88"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Grid, Button, TextField, Container } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signInAction } from \"../reducks/users/actons\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      backgroundColor: \"#FFB549\",\r\n      color: \"#FFFFFF\",\r\n      borderLeftColor: \"#FFB549\",\r\n      marginBottom: \"8px\",\r\n      margin: theme.spacing(2),\r\n      width: \"40ch\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#FFF\",\r\n        color: \"#FFB549\",\r\n      },\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"40ch\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst Registration = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const selector = useSelector((state: any) => state);\r\n\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n\r\n  const getAuthentication = async () => {\r\n    if (userEmail == \"\" || userPassword == \"\") {\r\n      alert(\"入力情報が足りません\");\r\n    } else {\r\n      const url =\r\n        \"http://localhost:3000/api/method/register?uid=\" +\r\n        userEmail +\r\n        \"&pwd=\" +\r\n        userPassword;\r\n      // 入力したidとパスワードをapiに送信\r\n      const res = await fetch(url)\r\n        .then((res) => {\r\n          console.log(\"通信に成功しました\");\r\n          return res.json();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"通信に失敗しました\", error);\r\n          return null;\r\n        });\r\n\r\n      if (res) {\r\n        dispatch(signInAction({ uid: userEmail, isLogin: true }));\r\n        handleToHomePage();\r\n      } else {\r\n        alert(\"ログインに失敗しました\");\r\n      }\r\n\r\n      // return true;\r\n    }\r\n  };\r\n  //trueの時ページ遷移\r\n  const handleToHomePage = () => {\r\n    dispatch(push(\"/\"));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"xs\">\r\n        <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\r\n          <h1>会員登録</h1>\r\n        </Grid>\r\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div>\r\n              <TextField\r\n                id=\"outlined-required\"\r\n                label=\"id(メールアドレス)\"\r\n                defaultValue=\"\"\r\n                variant=\"outlined\"\r\n                onChange={(id) => setUserEmail(id.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"パスワード\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                onChange={(pass) => setUserPassword(pass.target.value)}\r\n              />\r\n            </div>\r\n          </form>\r\n        </Grid>\r\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n          <div>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              onClick={() => getAuthentication()}\r\n            >\r\n              　登録する\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        <Grid container spacing={4} alignItems=\"center\" justify=\"center\">\r\n          <p>\r\n            <Link to=\"/Login\">アカウントをお持ちの方はこちら</Link>\r\n          </p>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Registration;\r\n","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Scroll.tsx",["89","90","91","92","93","94","95","96","97","98","99"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\store\\store.js",[],["100","101"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\users\\reducers.js",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\users\\actons.js",["102"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\store\\initialState.js",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Return.tsx",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Delete.tsx",["103","104"],"import React, { useState } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      backgroundColor: \"#FF4422\",\r\n      color: \"#FFFFFF\",\r\n      borderLeftColor: \"#39B5FF\",\r\n      marginBottom: \"8px\",\r\n      margin: theme.spacing(2),\r\n      width: \"20ch\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#FFF\",\r\n        color: \"#FF4422\",\r\n      },\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"40ch\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst Delete = (props: any) => {\r\n  const classes = useStyles();\r\n  const selector = useSelector((state: any) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const getAuthentication = async () => {\r\n    const url = \"http://localhost:3000/api/method/delete?sid=\" + props.sid;\r\n    console.log(props.uid);\r\n\r\n    const boolean = await fetch(url)\r\n      .then((boolean) => {\r\n        console.log(\"削除しました\");\r\n        return boolean.json();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"エラー\", error);\r\n        return null;\r\n      });\r\n\r\n    console.log(boolean);\r\n    if (boolean) {\r\n      console.log(\"成功\");\r\n    } else {\r\n      console.log(\"false\");\r\n    }\r\n\r\n    if (boolean) {\r\n      console.log(\"成功\");\r\n      alert(\"削除しました\");\r\n      dispatch(push(\"/Return\"));\r\n    } else {\r\n      console.log(\"false\");\r\n      alert(\"削除に失敗しました\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n        <div>\r\n          <Button\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            onClick={() => getAuthentication()}\r\n          >\r\n            削除\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Delete;\r\n","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Post.js",["105","106","107","108","109","110"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\PostContinus.js",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\PostButton.tsx",["111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":27},{"ruleId":"120","severity":1,"message":"121","line":42,"column":19,"nodeType":"122","messageId":"123","endLine":42,"endColumn":21},{"ruleId":"120","severity":1,"message":"121","line":42,"column":41,"nodeType":"122","messageId":"123","endLine":42,"endColumn":43},{"ruleId":"116","severity":1,"message":"124","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":22},{"ruleId":"116","severity":1,"message":"125","line":13,"column":9,"nodeType":"118","messageId":"119","endLine":13,"endColumn":12},{"ruleId":"116","severity":1,"message":"126","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"127","line":15,"column":8,"nodeType":"118","messageId":"119","endLine":15,"endColumn":16},{"ruleId":"116","severity":1,"message":"128","line":36,"column":9,"nodeType":"118","messageId":"119","endLine":36,"endColumn":17},{"ruleId":"120","severity":1,"message":"121","line":42,"column":19,"nodeType":"122","messageId":"123","endLine":42,"endColumn":21},{"ruleId":"120","severity":1,"message":"121","line":42,"column":41,"nodeType":"122","messageId":"123","endLine":42,"endColumn":43},{"ruleId":"116","severity":1,"message":"129","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":14},{"ruleId":"116","severity":1,"message":"130","line":9,"column":10,"nodeType":"118","messageId":"119","endLine":9,"endColumn":19},{"ruleId":"116","severity":1,"message":"131","line":10,"column":10,"nodeType":"118","messageId":"119","endLine":10,"endColumn":14},{"ruleId":"116","severity":1,"message":"132","line":10,"column":33,"nodeType":"118","messageId":"119","endLine":10,"endColumn":39},{"ruleId":"116","severity":1,"message":"133","line":31,"column":9,"nodeType":"118","messageId":"119","endLine":31,"endColumn":17},{"ruleId":"120","severity":1,"message":"121","line":42,"column":13,"nodeType":"122","messageId":"123","endLine":42,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":49,"column":20,"nodeType":"122","messageId":"123","endLine":49,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":56,"column":20,"nodeType":"122","messageId":"123","endLine":56,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":63,"column":20,"nodeType":"122","messageId":"123","endLine":63,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":116,"column":42,"nodeType":"122","messageId":"123","endLine":116,"endColumn":44},{"ruleId":"120","severity":1,"message":"121","line":118,"column":49,"nodeType":"122","messageId":"123","endLine":118,"endColumn":51},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"134","severity":1,"message":"126","line":1,"column":10,"nodeType":"118","messageId":"119","endLine":1,"endColumn":18},{"ruleId":"116","severity":1,"message":"126","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"128","line":32,"column":9,"nodeType":"118","messageId":"119","endLine":32,"endColumn":17},{"ruleId":"134","severity":1,"message":"135","line":5,"column":3,"nodeType":"118","messageId":"119","endLine":5,"endColumn":8},{"ruleId":"134","severity":1,"message":"136","line":10,"column":3,"nodeType":"118","messageId":"119","endLine":10,"endColumn":8},{"ruleId":"134","severity":1,"message":"137","line":12,"column":3,"nodeType":"118","messageId":"119","endLine":12,"endColumn":13},{"ruleId":"134","severity":1,"message":"138","line":18,"column":3,"nodeType":"118","messageId":"119","endLine":18,"endColumn":25},{"ruleId":"134","severity":1,"message":"139","line":19,"column":3,"nodeType":"118","messageId":"119","endLine":19,"endColumn":14},{"ruleId":"134","severity":1,"message":"131","line":22,"column":10,"nodeType":"118","messageId":"119","endLine":22,"endColumn":14},{"ruleId":"116","severity":1,"message":"126","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'signInAction' is defined but never used.","'num' is assigned a value but never used.","'useState' is defined but never used.","'MenuIcon' is defined but never used.","'selector' is assigned a value but never used.","'push' is defined but never used.","'SidAction' is defined but never used.","'Link' is defined but never used.","'scroll' is defined but never used.","'dispatch' is assigned a value but never used.","no-unused-vars","'Paper' is defined but never used.","'Theme' is defined but never used.","'IconButton' is defined but never used.","'ContactSupportOutlined' is defined but never used.","'PhotoCamera' is defined but never used.","no-global-assign","no-unsafe-negation"]