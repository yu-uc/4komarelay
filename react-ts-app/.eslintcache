[{"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\index.tsx":"1","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reportWebVitals.ts":"2","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\App.tsx":"3","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Login.tsx":"4","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Home.tsx":"5","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Navbar.tsx":"6","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Registration.tsx":"7","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Scroll.tsx":"8","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\store\\store.js":"9","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\users\\reducers.js":"10","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\users\\actons.js":"11","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\store\\initialState.js":"12","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Return.tsx":"13"},{"size":864,"mtime":1610770444881,"results":"14","hashOfConfig":"15"},{"size":440,"mtime":1606817256760,"results":"16","hashOfConfig":"15"},{"size":1579,"mtime":1610806941517,"results":"17","hashOfConfig":"15"},{"size":3884,"mtime":1610773929276,"results":"18","hashOfConfig":"15"},{"size":1186,"mtime":1610806254941,"results":"19","hashOfConfig":"15"},{"size":7174,"mtime":1610807132559,"results":"20","hashOfConfig":"15"},{"size":3785,"mtime":1610774366271,"results":"21","hashOfConfig":"15"},{"size":3641,"mtime":1610806088291,"results":"22","hashOfConfig":"15"},{"size":507,"mtime":1610780304098,"results":"23","hashOfConfig":"15"},{"size":570,"mtime":1610780624901,"results":"24","hashOfConfig":"15"},{"size":428,"mtime":1610784156837,"results":"25","hashOfConfig":"15"},{"size":176,"mtime":1610784731664,"results":"26","hashOfConfig":"15"},{"size":419,"mtime":1610807184520,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1bauzl",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\index.tsx",[],["60","61"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reportWebVitals.ts",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\App.tsx",["62","63"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Login.tsx",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Home.tsx",["64","65","66"],"import { push } from \"connected-react-router\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { UsersContext } from \"../App\";\r\nimport { signInAction } from \"../reducks/users/actons\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport Scroll from \"./Scroll\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const selector = useSelector((state: any) => state);\r\n  const num = selector.serches.count;\r\n  // const [list, setList] = useState<any[]>([]);\r\n\r\n  console.log(selector);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {\" \"}\r\n        {(() => {\r\n          if (!selector.users.isLogin) {\r\n            return <Redirect to=\"/login\" />;\r\n          } else {\r\n            return;\r\n          }\r\n        })()}\r\n      </div>\r\n      {/* {if(selectpr.users.isLogin)<Redirect to=\"/login\" />} */}\r\n      <div>\r\n        <Navbar />\r\n        <h3>userID:{selector.users.uid}</h3>\r\n        <h3>{selector.serches.genre}の検索結果</h3>\r\n        <button onClick={() => dispatch(push(\"/login\"))}></button>\r\n        <Scroll />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Navbar.tsx",["67","68","69","70"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Registration.tsx",["71","72","73"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Grid, Button, TextField, Container } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      backgroundColor: \"#FFB549\",\r\n      color: \"#FFFFFF\",\r\n      borderLeftColor: \"#FFB549\",\r\n      marginBottom: \"8px\",\r\n      margin: theme.spacing(2),\r\n      width: \"40ch\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#FFF\",\r\n        color: \"#FFB549\",\r\n      },\r\n    },\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"40ch\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst Registration = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  const getAuthentication = async () => {\r\n    console.log(userEmail);\r\n    console.log(userPassword);\r\n\r\n    const data = { uid: userEmail, pwd: userPassword };\r\n\r\n    const param = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n      },\r\n\r\n      // リクエストボディ\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    const url = \"http://localhost:3000/api/method/\";\r\n    // 入力したidとパスワードをapiに送信\r\n    const res = await fetch(url, param)\r\n      .then((res) => {\r\n        console.log(\"通信に成功しました\");\r\n        return res.json();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"通信に失敗しました\", error);\r\n        return null;\r\n      });\r\n\r\n    if (res) {\r\n      //console.log(\"true\");\r\n      setIsLogin(true);\r\n      handleToHomePage();\r\n    } else {\r\n      console.log(\"false\");\r\n    }\r\n\r\n    return true;\r\n  };\r\n  //trueの時ページ遷移\r\n  const handleToHomePage = () => {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"xs\">\r\n        <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\r\n          <h1>会員登録</h1>\r\n        </Grid>\r\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div>\r\n              <TextField\r\n                id=\"outlined-required\"\r\n                label=\"id(メールアドレス)\"\r\n                defaultValue=\"\"\r\n                variant=\"outlined\"\r\n                onChange={(id) => setUserEmail(id.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"パスワード\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                onChange={(pass) => setUserPassword(pass.target.value)}\r\n              />\r\n            </div>\r\n          </form>\r\n        </Grid>\r\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\r\n          <div>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              onClick={() => getAuthentication()}\r\n            >\r\n              　登録する\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        <Grid container spacing={4} alignItems=\"center\" justify=\"center\">\r\n          <p>\r\n            <Link to=\"/Login\">アカウントをお持ちの方はこちら</Link>\r\n          </p>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Registration;\r\n","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Scroll.tsx",["74","75","76","77","78","79"],"import React, { useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      width: \"100%\",\r\n    },\r\n    control: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst Scroll = (props: any) => {\r\n  //表示するデータ\r\n  const [list, setList] = useState<any[]>([]);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const selector = useSelector((state: any) => state);\r\n  let num: number = selector.serches.count;\r\n\r\n  console.log(\"テスト用：；list\");\r\n  console.log(list);\r\n\r\n  //項目を読み込むときのコールバック\r\n  const loadMore = async (page: any) => {\r\n    let apiurl = \"\";\r\n\r\n    if (num == 0) {\r\n      apiurl = \"http://localhost:3000/api/method/completed?page=\" + page;\r\n    } else if (num == 1) {\r\n      console.log(\"0のまま\");\r\n      apiurl = \"http://localhost:3000/api/method/idsearch?page=\" + page;\r\n      console.log(\"1に変更\");\r\n    } else if (num == 2) {\r\n    } else if (num == 3) {\r\n    } else {\r\n      //   apiurl = \"http://localhost:3000/api/method/completed?page=\" + page;\r\n    }\r\n\r\n    const res = await fetch(apiurl);\r\n    const data = await res.json(); //取得データ\r\n\r\n    console.log(\"page\" + page);\r\n\r\n    //   データ件数が0件の場合、処理終了\r\n    if (data.length < 1) {\r\n      console.log(\"おしまい\");\r\n      setHasMore(false);\r\n      return;\r\n    }\r\n\r\n    // console.log(\"for文開始\"); //ここで止まっている\r\n    //apiからとってきたデータをlistに追加する\r\n    const newList: any[] = [];\r\n    data.forEach(function (da: any) {\r\n      const addList = [da.urls.url1, da.urls.url2, da.urls.url3, da.urls.url4];\r\n      newList.push(addList);\r\n    });\r\n    // props.setList([...props.list, ...newList]);\r\n    // setList(props.list);\r\n    setList([...list, ...newList]);\r\n  };\r\n\r\n  //各スクロール要素\r\n  const items = (\r\n    <div className={classes.paper}>\r\n      <Grid container>\r\n        {list.map((value, index) => (\r\n          <Grid item xs={3}>\r\n            {index}\r\n            <img key={index} src={value[0]} alt={\"sample\"} width=\"100%\" />\r\n            <img key={index + 100} src={value[1]} alt={\"sample\"} width=\"100%\" />\r\n            <img key={index + 101} src={value[2]} alt={\"sample\"} width=\"100%\" />\r\n            <img key={index + 102} src={value[3]} alt={\"sample\"} width=\"100%\" />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n\r\n  //全体のスタイル\r\n  const root_style = {\r\n    marginLeft: \"30px\",\r\n    marginRight: \"30px\",\r\n    marginTop: \"50px\",\r\n  };\r\n\r\n  //ロード中に表示する項目\r\n  const loader = (\r\n    <div className=\"loader\" key={0}>\r\n      Loading ...\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div style={root_style}>\r\n      {/* <button onClick={() => dispatch(setList([]))}></button> */}\r\n      <InfiniteScroll\r\n        loadMore={loadMore} //項目を読み込む際に処理するコールバック関数\r\n        hasMore={hasMore} //読み込みを行うかどうかの判定\r\n        loader={loader}\r\n      >\r\n        {\" \"}\r\n        {/* 読み込み最中に表示する項目 */}\r\n        {items} {/* 無限スクロールで表示する項目 */}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\store\\store.js",[],["80","81"],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\users\\reducers.js",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\users\\actons.js",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\reducks\\store\\initialState.js",[],"C:\\Users\\YutA UchidA\\Documents\\GitHub\\4komarelay\\react-ts-app\\src\\componet\\Return.tsx",["82"],"import React, { useState } from \"react\";\r\nimport { push } from \"connected-react-router\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Scroll = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      {(() => {\r\n        dispatch(push(\"/\"));\r\n        return <Redirect to=\"/\" />;\r\n      })()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":27},{"ruleId":"87","severity":1,"message":"91","line":7,"column":10,"nodeType":"89","messageId":"90","endLine":7,"endColumn":23},{"ruleId":"87","severity":1,"message":"92","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":25},{"ruleId":"87","severity":1,"message":"93","line":5,"column":10,"nodeType":"89","messageId":"90","endLine":5,"endColumn":22},{"ruleId":"87","severity":1,"message":"94","line":13,"column":9,"nodeType":"89","messageId":"90","endLine":13,"endColumn":12},{"ruleId":"87","severity":1,"message":"92","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"95","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":14},{"ruleId":"87","severity":1,"message":"96","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"97","line":17,"column":8,"nodeType":"89","messageId":"90","endLine":17,"endColumn":16},{"ruleId":"87","severity":1,"message":"98","line":5,"column":23,"nodeType":"89","messageId":"90","endLine":5,"endColumn":34},{"ruleId":"87","severity":1,"message":"99","line":33,"column":9,"nodeType":"89","messageId":"90","endLine":33,"endColumn":17},{"ruleId":"87","severity":1,"message":"100","line":37,"column":10,"nodeType":"89","messageId":"90","endLine":37,"endColumn":17},{"ruleId":"87","severity":1,"message":"101","line":6,"column":10,"nodeType":"89","messageId":"90","endLine":6,"endColumn":14},{"ruleId":"87","severity":1,"message":"99","line":27,"column":9,"nodeType":"89","messageId":"90","endLine":27,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":38,"column":13,"nodeType":"104","messageId":"105","endLine":38,"endColumn":15},{"ruleId":"102","severity":1,"message":"103","line":40,"column":20,"nodeType":"104","messageId":"105","endLine":40,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":44,"column":20,"nodeType":"104","messageId":"105","endLine":44,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":45,"column":20,"nodeType":"104","messageId":"105","endLine":45,"endColumn":22},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"92","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'useState' is defined but never used.","'signInAction' is defined but never used.","'num' is assigned a value but never used.","'Link' is defined but never used.","'Scroll' is defined but never used.","'MenuIcon' is defined but never used.","'useSelector' is defined but never used.","'dispatch' is assigned a value but never used.","'isLogin' is assigned a value but never used.","'push' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]